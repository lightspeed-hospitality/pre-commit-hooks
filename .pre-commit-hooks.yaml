---
- id: circleci-config-validate
  name: CircleCI config validation
  description: Test if the CircleCI config is well formed.
  entry: pre_commit_hooks/circleci-config-validate.sh
  language: script
  files: ^.circleci/config.yml$

- id: circleci-config-pack
  name: CircleCI config pack
  description: Pack the config, creating the config.yml file
  entry: pre_commit_hooks/circleci-config-pack.sh
  language: script
  files: ^.circleci/config/
  pass_filenames: false

- id: poetry-pytest
  name: Pytest within poetry shell
  description: Use poetry to run pytest
  entry: pre_commit_hooks/poetry-pytest.sh
  language: script
  pass_filenames: false
  always_run: true

- id: end-of-file-fixer
  name: end of file fixer
  description: end of file fixer
  entry: end-of-file-fixer
  language: python
  types: [text]
  stages: [commit, push, manual]

- id: trailing-whitespace
  name: Trim Trailing Whitespace
  description: This hook trims trailing whitespace.
  entry: trailing-whitespace-fixer
  language: python
  types: [text]
  stages: [commit, push, manual]

- id: pretty-format-json
  name: Pretty format JSON
  description: This hook sets a standard for formatting JSON files.
  entry: pretty-format-json
  language: python
  types: [json]

- id: requirements-txt-fixer
  name: Fix requirements.txt
  description: Sorts entries in requirements.txt
  entry: requirements-txt-fixer
  language: python
  files: requirements.*\.txt$

- id: google-java-code-format
  name: Format Java with Google formatter
  entry: pre_commit_hooks/google-java-code-format.sh
  language: script
  types: [ text ]
  files: \.(java)$
  stages: [commit, push, manual]
  require_serial: true

- id: yamllint
  name: yamllint
  description: This hook runs yamllint.
  entry: yamllint
  language: python
  types: [file, yaml]

- id: shellcheck
  name: Test shell scripts with shellcheck
  description: Shell scripts conform to shellcheck
  entry: submodule_syntaqx_git_hooks/hooks/shellcheck.sh
  language: script
  types: [shell]
  exclude_types: [csh, perl, python, ruby, tcsh, zsh]
  args: [-e, SC1091]

- id: shfmt
  name: Check shell style with shfmt
  language: script
  entry: submodule_syntaqx_git_hooks/hooks/shfmt.sh
  types: [shell]
  exclude_types: [csh, perl, python, ruby, tcsh, zsh]
  args: ['-l', '-i', '2', '-ci']

- id: detect-secrets
  name: Detect secrets
  description: Detects high entropy strings that are likely to be passwords.
  language: python
  entry: detect-secrets-hook
  args: ['--base64-limit', '4.5', '--hex-limit', '3']
  files: .*
